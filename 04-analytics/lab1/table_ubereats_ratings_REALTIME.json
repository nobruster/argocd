{
  "tableName": "ratings_REALTIME",
  "tableType": "REALTIME",
  "segmentsConfig": {
  "minimizeDataMovement": false,
  "timeColumnName": "dt_current_timestamp",
  "schemaName": "ratings",
  "replication": "1",
  "replicasPerPartition": "1"
  },
  "tenants": {
  "broker": "DefaultTenant",
  "server": "DefaultTenant",
  "tagOverrideConfig": {}
  },
  "tableIndexConfig": {
  "rangeIndexVersion": 2,
  "autoGeneratedInvertedIndex": false,
  "createInvertedIndexDuringSegmentGeneration": false,
  "loadMode": "MMAP",
  "streamConfigs": {
      "streamType": "kafka",
      "stream.kafka.topic.name": "ratings",
      "stream.kafka.broker.list": " dev-cluster-kafka-bootstrap.ingestion.svc.cluster.local:9092",
      "stream.kafka.consumer.type": "lowlevel",
      "stream.kafka.consumer.prop.auto.offset.reset": "smallest",
      "stream.kafka.consumer.factory.class.name": "org.apache.pinot.plugin.stream.kafka20.KafkaConsumerFactory",
      "stream.kafka.decoder.class.name": "org.apache.pinot.plugin.inputformat.avro.confluent.KafkaConfluentSchemaRegistryAvroMessageDecoder",
      "stream.kafka.decoder.prop.format": "AVRO",
      "stream.kafka.decoder.prop.schema.registry.schema.name": "ratings-value",
      "stream.kafka.decoder.prop.schema.registry.rest.url": "http://confluent-schema-registry-cp-schema-registry.ingestion.svc.cluster.local:8081",
      "realtime.segment.flush.threshold.rows": "0",
      "realtime.segment.flush.threshold.segment.rows": "0",
      "realtime.segment.flush.threshold.time": "1h",
      "realtime.segment.flush.threshold.segment.size": "100M"
  },
  "enableDefaultStarTree": false,
  "enableDynamicStarTreeCreation": false,
  "aggregateMetrics": false,
  "nullHandlingEnabled": false,
  "columnMajorSegmentBuilderEnabled": true,
  "optimizeDictionary": false,
  "optimizeDictionaryForMetrics": false,
  "noDictionarySizeRatioThreshold": 0.85,
  "noDictionaryColumns": [],
  "invertedIndexColumns": [],
  "bloomFilterColumns": [],
  "onHeapDictionaryColumns": [],
  "rangeIndexColumns": [],
  "sortedColumn": [],
  "varLengthDictionaryColumns": []
  },
  "metadata": {},
  "quota": {},
  "routing": {},
  "query": {},
  "ingestionConfig": {
  "segmentTimeValueCheck": true,
  "continueOnError": false,
  "rowTimeValueCheck": false,
  "transformConfigs": [
      {
        "columnName": "dt_current_timestamp", 
        "transformFunction": "FromDateTime('dt_current_timestamp', 'yyyy-MM-dd HH:mm:ss')"
      },
      {
        "columnName": "timestamp", 
        "transformFunction": "FromDateTime('timestamp', 'yyyy-MM-dd HH:mm:ss')"
      }
    ]
  },
  "isDimTable": false
}