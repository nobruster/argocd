apiVersion: "kafka.strimzi.io/v1beta2"
kind: "KafkaConnector"
metadata:
  name: "sink-iceberg-order-status"
  labels:
    strimzi.io/cluster: kafka-connect-cluster 
spec:
  class: io.tabular.iceberg.connect.IcebergSinkConnector
  tasksMax: 1 
  config:
    topics: order-status
    key.converter: "org.apache.kafka.connect.storage.StringConverter"
    key.converter.schema.registry.url: "http://confluent-schema-registry-cp-schema-registry.ingestion:8081"
    key.converter.schemas.enable: "false"
    value.converter: "io.confluent.connect.avro.AvroConverter"
    value.converter.schema.registry.url: "http://confluent-schema-registry-cp-schema-registry.ingestion:8081"
    value.converter.schemas.enable: "false"
    iceberg.tables: default.order_status
    iceberg.catalog.type: hive
    iceberg.catalog.uri: thrift://hive-metastore.deepstore.svc.cluster.local:9083
    iceberg.catalog.io-impl: org.apache.iceberg.aws.s3.S3FileIO 
    iceberg.catalog.warehouse: s3a://warehouse
    iceberg.catalog.client.region: us-east-1
    iceberg.catalog.s3.access-key-id: "minio"
    iceberg.catalog.s3.secret-access-key: "minio123"
    iceberg.catalog.s3.endpoint: http://datalake-hl.deepstore.svc.cluster.local:9000
    iceberg.catalog.s3.path-style-access: true
    iceberg.tables.auto-create-enabled: true
    iceberg.tables.evolve-schema-enabled: false