apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "hive-metastore.fullname" . }}-db-init-schema
spec:
  template:
    spec:
      containers:
      - name: hivemeta
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        command: ["/bin/sh", "-c"]
        args:
          - |
            echo "Aguardando 20 segundos..."
            sleep 25
            echo "Verificando se o banco já existe..."
            PGPASSWORD="{{- .Values.connections.database.password }}" psql -h "{{- tpl .Values.connections.database.host . }}" -p "{{- .Values.connections.database.port }}" -U "{{- .Values.connections.database.username }}" -d "{{- .Values.connections.database.database }}" -c "SELECT 1;" >/dev/null 2>&1
            if [ $? -eq 0 ]; then
              echo "Banco de dados já existe. Nenhuma ação necessária."
            else
              echo "Inicializando schema..."
              schematool --verbose -initSchema -dbType postgres \
                -userName "{{- .Values.connections.database.username }}" \
                -passWord "{{- .Values.connections.database.password }}" \
                -url "jdbc:postgresql://{{- tpl .Values.connections.database.host . }}:{{- .Values.connections.database.port }}/{{- .Values.connections.database.database }}"
            fi
        volumeMounts:
        - name: hive-config
          mountPath: /opt/hive-metastore/conf
        env:
          {{- if .Values.extraEnvVars }}
          {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
          {{- end }}
      volumes:
      - name: hive-config
        configMap:
          name: {{ include "hive-metastore.fullname" . }}


      restartPolicy: Never
  backoffLimit: 3
